#+startup: overview hideblocks indent inlineimages
* Human and AI graders (prompt A)

1. Plot the grade curves for the three human graders
   (histogram/median)
2. Plot the grade curve for Claude/Grader-GPT over it
3. Compare averages in a plot

** Data   
- Data: three human graders for prompt A (arrays)
  #+begin_src python :python python3 :session *Python* :results none
    import numpy as np
    # human graders 1-3 prompt A
    h1_a = np.array([24,22,25,22,24,24,25])
    h2_a = np.array([17,19,19,18,18,21,17])
    h3_a = np.array([12,22,10,11,11,9])
  #+end_src
** Line plot
- Plot each of these as a line plot:
  #+begin_src python :file img/h_a.png :results graphics file output :python python3 :session *Python*
    import matplotlib.pyplot as plt # import library
    plt.clf() # clear graphics
    fig, ax = plt.subplots(3,1, sharex=True) # set up 3 x 2 plot panel
    ## first grader
    ax[0].plot(h1_a,marker="o")
    ax[1].plot(h2_a,marker="o")
    ax[2].plot(h3_a,marker="o")
    plt.savefig("img/h_a.png") # save plot
  #+end_src

  #+RESULTS:
  [[file:img/h_a.png]]

** Histogram  
- Histograms:
  #+begin_src python :file img/h_a_hist.png :results graphics file output :python python3 :session *Python*
    import matplotlib.pyplot as plt # import library
    plt.clf() # clear graphics
    fig, ax = plt.subplots(3,1,sharex=True) # set up 3 x 2 plot panel
    ## human graders - histogram and median
    ax[0].hist(h1_a,bins="auto",edgecolor="w")
    ax[0].axvline(np.median(h1_a),color="r",linestyle="--",linewidth=2)
    ax[1].hist(h2_a,bins="auto",edgecolor="w")
    ax[1].axvline(np.median(h2_a),color="r",linestyle="--",linewidth=2)
    ax[2].hist(h3_a,bins="auto",edgecolor="w")
    ax[2].axvline(np.median(h3_a),color="r",linestyle="--",linewidth=2)
    ## customize plots
    # title and labels
    ax[0].set_title("Grades - First prompt essays - histograms")
    ax[2].set_xlabel("Points")
    ax[0].set_ylabel("Frequency")
    ax[1].set_ylabel("Frequency")
    ax[2].set_ylabel("Frequency")
    # grid lines
    ax[0].grid()
    ax[1].grid()
    ax[2].grid()
    plt.tight_layout()
    plt.savefig("img/h_a_hist.png") # save plot
  #+end_src

  #+RESULTS:
  [[file:img/h_a_hist.png]]

** Box plot  
- Boxplots:
  #+begin_src python :file img/h_a_box.png :results graphics file output :python python3 :session *Python*
    import matplotlib.pyplot as plt # import library
    plt.clf() # clear graphics
    fig, ax = plt.subplots(3,1,sharex=True) # set up 3 x 2 plot panel
    boxprops = dict(linestyle='-',linewidth=1.5) ## boxprops
        ## human graders - box plots
    ax[0].boxplot(h1_a,vert=False,boxprops=boxprops)
    ax[1].boxplot(h2_a,vert=False,boxprops=boxprops)
    ax[2].boxplot(h3_a,vert=False,boxprops=boxprops)
    ## customize plots
    # title and labels
    ax[0].set_title("Grades - First prompt essays - box plots")
    ax[2].set_xlabel("Points")
        # grid lines
    ax[0].grid(True)
    ax[1].grid(True)
    ax[2].grid(True)
    plt.savefig("img/h_a_box.png") # save plot
  #+end_src

  #+RESULTS:
  [[file:img/h_a_box.png]]

- Box plots might look better next to, instead of on top of one
  another:
  #+begin_src python :file img/h_a_box2.png :results graphics file output :python python3 :session *Python*
    import matplotlib.pyplot as plt # import library
    plt.clf() # clear graphics
    fig, ax = plt.subplots(1,3,sharey=True) # set up 3 x 2 plot panel
    boxprops = dict(linestyle='-',linewidth=1.5) ## boxprops
        ## human graders - box plots
    ax[0].boxplot(h1_a,boxprops=boxprops)
    ax[1].boxplot(h2_a,boxprops=boxprops)
    ax[2].boxplot(h3_a,boxprops=boxprops)
    ## customize plots
    # title and labels
    ax[1].set_title("Grades - First prompt essays - box plots")
    ax[0].set_ylabel("Points")
    # grid lines
    ax[0].grid(True)
    ax[1].grid(True)
    ax[2].grid(True)
    plt.tight_layout()
    plt.savefig("img/h_a_box2.png") # save plot
  #+end_src

  #+RESULTS:
  [[file:img/h_a_box2.png]]

** Boxplot with AI grader median

- Using the data from the same Artifact IDs as the human graders to
  compare the medians in the histogram.

- Get the data:
  #+begin_src python :python python3 :session *Python* :results none
    import numpy as np
    # human graders 1-3 prompt A
    claude_1_a = np.array([25,24,25,21,25,25,25])
    claude_2_a = np.array([21,25,25,25,25,23,22])
    claude_3_a = np.array([24,24,23,23,25,24])
    grader_1_a = np.array([25,24,25,24,25,25,25])
    grader_2_a = np.array([25,25,25,25,24,25,25])
    grader_3_a = np.array([25,25,25,25,25,25])
  #+end_src

- Plot the data. Needs some legend information - plot's getting too
  busy.
  #+begin_src python :file img/h_ai_a_hist.png :results graphics file output :python python3 :session *Python*
    import matplotlib.pyplot as plt # import library
    plt.clf() # clear graphics
    fig, ax = plt.subplots(3,1,sharex=True) # set up 3 x 2 plot panel
    ## human graders - histogram
    ax[0].hist(h1_a,bins="auto",edgecolor="w")
    ax[1].hist(h2_a,bins="auto",edgecolor="w")
    ax[2].hist(h3_a,bins="auto",edgecolor="w")
    # medians - human graders
    ax[0].axvline(np.median(h1_a),color="r",linestyle="--",linewidth=2)
    ax[1].axvline(np.median(h2_a),color="r",linestyle="--",linewidth=2)
    ax[2].axvline(np.median(h3_a),color="r",linestyle="--",linewidth=2)
    # medians - AI graders
    ax[0].axvline(np.median(claude_1_a),color="orange",linestyle="-",
                  linewidth=2)
    ax[0].axvline(np.median(grader_1_a),color="black",linestyle=":",
                  linewidth=2)
    ax[1].axvline(np.median(claude_2_a),color="orange",linestyle="-",
                  linewidth=2)
    ax[1].axvline(np.median(grader_2_a),color="black",linestyle=":",
                  linewidth=2)
    ax[2].axvline(np.median(claude_3_a),color="orange",linestyle="-",
                  linewidth=2)
    ax[2].axvline(np.median(grader_3_a),color="black",linestyle=":",
                  linewidth=2)
    ## customize plots
    # title and labels
    ax[0].set_title("Grades - First prompt essays - histograms")
    ax[2].set_xlabel("Points")
    ax[0].set_ylabel("Frequency")
    ax[1].set_ylabel("Frequency")
    ax[2].set_ylabel("Frequency")
    # grid lines
    ax[0].grid()
    ax[1].grid()
    ax[2].grid()
    plt.tight_layout()
    plt.savefig("img/h_ai_a_hist.png") # save plot
  #+end_src

  #+RESULTS:
  [[file:img/h_ai_a_hist.png]]

